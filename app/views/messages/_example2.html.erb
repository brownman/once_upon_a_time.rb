<script type="text/javascript"> 

      var PI2 = Math.PI * 2;
  var mouseX = 0, mouseY = 0,

  windowHalfX = window.innerWidth / 2,
  windowHalfY = window.innerHeight / 2,

  SEPARATION = 200,
  AMOUNTX = 10,
  AMOUNTY = 10,

  camera, scene, renderer;







  var greetings = aOfer;
  var particle=null;
      var material = new THREE.ParticleCanvasMaterial( {

color: 0xffffff,
program: function ( context ) {

context.beginPath();
context.arc( 0, 0, 1, 0, PI2, true );
context.closePath();
context.fill();

}

} );
  //FROM EX02: this.init = function () {

  //MATERIALS


  //SET TEXTBOX POSITION
  for ( var j = 0; j < greetings.length; j ++ ) {

    var resolution = 8;
    var amplitude = 100 + ( j * ( Math.random() * 200 + 10 ) );
    var size = 360 / resolution;

    var rand = Math.random() * Math.PI * 2;
    greetings[j].position =  new THREE.Vector3( );
    greetings[j].position.y =  greetings[j].position_x * (-3) ;

    greetings[j].position.x = greetings[j].depth * (222);

    greetings[j].position.z = 0;//Math.sin( rand ) * amplitude ;
  }

















function init() {

  var container, separation = 100, amountX = 50, amountY = 50,
      particles, particle;

  container = document.getElementById('example2');
  // document.body.appendChild(container);

  camera = new THREE.Camera( 75, window.innerWidth / window.innerHeight, 1, 10000 );
  camera.position.z = 100;

  scene = new THREE.Scene();
// renderer

               // renderer = new THREE.WebGLRenderer();
               // renderer.setClearColorHex( 0xaaaaaa, 1 );
               // renderer.setSize( window.innerWidth, window.innerHeight );
               // container.appendChild( renderer.domElement );

  renderer = new THREE.CanvasRenderer();

                renderer.setClearColorHex( 0xaaaaaa, 1 );
  renderer.setSize( window.innerWidth/2, window.innerHeight/2 );
  container.appendChild( renderer.domElement );

  // particles

  var PI2 = Math.PI * 2;    


   

  function shit()
  {
     var textMaterial=null; 
  
  textMaterial  = new THREE.ParticleBasicMaterial(
  {

map: new THREE.Texture
( 
       createTextImage( greetings[ j ].content )
)

, blending: THREE.AdditiveBlending
}

);     
    textMaterial.offset.y = 35; 
  //DRAW TEXTBOX 
    }

  for ( var j = 0; j < greetings.length; j ++ ) {


    var x=greetings[j].position.x;
    var y=greetings[j].position.y;
    var z=greetings[j].position.z;
    var str=greetings[j].content;
    var size=10;

    var t_particle= createText(str, size, x, y, z); 


    ////particle = new THREE.Particle( textMaterial );

    //TRY TO USE EXISTING POSITIONS:
    ////particle.position = greetings[j].position;


    //atlast: draw textbox!
    //scene.addObject( particle );
    //   particle.position.z = Math.sin( rand ) * amplitude;
    ////particle.scale.z = particle.scale.x= particle.scale.y = 0.5;
    ////

scene.addObject( t_particle ); //ADD TEXTBOX




    //LINES:      CONNECT TEXTBOXES


    var    str_p='draw line from parent:'+ greetings[j].id;
    for(var k=j+1; k<greetings.length & j<greetings.length-1;k++)
    {
      if(greetings[j].id == greetings[k].parent_id)
      {
        var str_c = 'to child:' + greetings[k].id;
        console.log(str_p + str_c);


        geometry = new THREE.Geometry();

        geometry.vertices.push( new THREE.Vertex( greetings[j].position ) );
        geometry.vertices.push( new THREE.Vertex( greetings[k].position ) );
        var line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 0.5 } ) );

        //       line = new THREE.Line( geometry, material );
        line.scale.z = line.scale.x= line.scale.y = 1.0; 


        scene.addObject( line ); //ADD LINE
      }//if



    }//for k 

  }//for j








function shit2()
{
  var geometry = new THREE.Geometry();

  for ( var i = 0; i < 100; i ++ ) {

    particle = new THREE.Particle( material );
    particle.position.x = Math.random() * 2 - 1;
    particle.position.y = Math.random() * 2 - 1;
    particle.position.z = Math.random() * 2 - 1;
    particle.position.normalize();
    particle.position.multiplyScalar( Math.random() * 10 + 450 );
    particle.scale.x = particle.scale.y = 5;
    scene.addObject( particle );

    geometry.vertices.push( new THREE.Vertex( particle.position ) );

    }
}
    // lines

    var line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 0.5 } ) );
    scene.addObject( line );

    document.addEventListener( 'mousemove', onDocumentMouseMove, false );
    document.addEventListener( 'touchstart', onDocumentTouchStart, false );
    document.addEventListener( 'touchmove', onDocumentTouchMove, false );
}//init()



//

function onDocumentMouseMove(event) {

  mouseX = event.clientX - windowHalfX;
  mouseY = event.clientY - windowHalfY;
}

function onDocumentTouchStart( event ) {

  if ( event.touches.length > 1 ) {

    event.preventDefault();

    mouseX = event.touches[ 0 ].pageX - windowHalfX;
    mouseY = event.touches[ 0 ].pageY - windowHalfY;

  }

}

function onDocumentTouchMove( event ) {

  if ( event.touches.length == 1 ) {

    event.preventDefault();

    mouseX = event.touches[ 0 ].pageX - windowHalfX;
    mouseY = event.touches[ 0 ].pageY - windowHalfY;

  }

}

//

function animate() {

  requestAnimationFrame( animate );

  render();

}

function render() {

  camera.position.x += ( mouseX - camera.position.x ) * .05;
  camera.position.y += ( - mouseY + 200 - camera.position.y ) * .05;

  renderer.render( scene, camera );

}   



function createTextImage( string ) {

  var canvas = document.createElement( 'canvas' );
  canvas.width = 150;
  canvas.height = 85;
  canvas.loaded = true;

  var context = canvas.getContext( '2d' );
  context.font = "30px Georgia";
  context.fillStyle = "rgb(0, 255, 255)";
  context.textAlign = "center";
  context.fillText( string, canvas.width / 2, 25 );

  return canvas;
}        
//var geometry, cameraPath, cameraTargetPath, particle, line, material, material2, scene,


 

//}//func             
 function createText(string, size, x, y, z) {
                var canvas = document.createElement( 'canvas' );
                canvas.width = 150;
                canvas.height = 85;
                canvas.needsUpdate = true;

                var context = canvas.getContext( '2d' );
                context.font = size+"px Georgia";
                context.fillStyle = "rgb(255, 255, 255)";
                context.textAlign = "center";
                context.fillText( string, canvas.width / 2, 25 );
    
                
                
                var texture = new THREE.Texture( canvas );
                texture.needsUpdate = true;
                var textMaterial = new THREE.ParticleBasicMaterial( { map: texture, blending: THREE.AdditiveBlending } );
                
                particle = new THREE.Particle( textMaterial );
                particle.position.y = y;
                particle.position.x = x;
                particle.position.z = z;
    
                return particle;
            }

init();

animate(); 
</script> 










